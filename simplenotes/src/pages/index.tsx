import Head from 'next/head';

import { Auth } from '@supabase/auth-ui-react';
import { ThemeSupa } from '@supabase/auth-ui-shared';
import { useSession, useSupabaseClient } from '@supabase/auth-helpers-react';
import Notes from '@/components/Notes';
import { useRouter } from 'next/router';
import { useState } from 'react';


export default function Home() {
  const router = useRouter();
  const session = useSession();
  const supabase = useSupabaseClient();

  const [buttonDisabled, setButtonDisabled] = useState(false)
  const [buttonText, setButtonText] = useState('Create a new note âœ¨');

  const handleCreateNewNote = async (e: any) => {
    e.preventDefault();
    setButtonDisabled(true);
    setButtonText('Creating a new note...');
    await createNewNote();
  };

  const createNewNote = async () => {
    const { data, error } = await supabase.from('notes').insert({ title: 'new note', created_by: session?.user.id }).select();
    if(error){
      alert('could not create a new note ðŸ¥²');
      setButtonDisabled(false);
      setButtonText('Create a new note âœ¨');
      return;
    } else {
      router.push(`/notes/${data[0].id}`);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {!session ? (
          <Auth
            supabaseClient={supabase}
            appearance={{ theme: ThemeSupa }}
            theme="light"
            providers={['discord', 'github']}
            redirectTo={process.env.NEXT_PUBLIC_REDIRECT_URL}
          />
        ) : (
          <>
            <p>logged in as {session.user.email}</p>
            <button onClick={handleCreateNewNote} disabled={buttonDisabled}>{buttonText}</button>
            <Notes />
          </>
        )}
      </div>
    </>
  );
}
